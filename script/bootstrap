#!/usr/bin/env bash
#/ Usage: script/bootstrap [-d|--domain <domain>] [--no-install]
#/ Description: Bootstraps the development environment
#/ Options:
#/   -d, --domain <domain>  The ngrok domain to use for your local development environment.
#/   --no-install          Do not install dependencies, just bail if they aren't present. Useful for CI environments.
source ./script/helpers/_utils.sh
set_source_and_root_dir

install=false

# Assign command line arguments to variables
while (( "$#" )); do
  key="$1"
  shift
  case "$key" in
    -d|--domain)
      ngrok_domain="${1:-}"
    ;;
    --no-install)
      install=false
    ;;
    -\?|-h|--help)
      grep '^#/' <"$0" | cut -c4-
      exit
    ;;
  esac
done

echo "Bootstrapping AIDemo..."

if $install && ! type brew >/dev/null 2>&1; then
  fatal "🚨Can't auto-install dependencies. You don't have homebrew installed. Please install it and try again."
else
  echo "✅Brew installed."
fi

# Install Homebrew dependencies
brew_install_if_missing docker
brew_install_if_missing ngrok

# Install Bun (requires special tap)
if ! type bun >/dev/null 2>&1; then
  echo "Installing Bun..."
  brew tap oven-sh/bun
  brew install bun
else
  echo "✅Bun installed."
fi

# Now set up configuration

if [ -f "$HOME/Library/Application Support/ngrok/ngrok.yml" ]; then
  echo "✅Found existing ngrok configuration. Skipping…"
else
  echo "⚠️I need your ngrok auth token."
  echo "Go to https://dashboard.ngrok.com/get-started/your-authtoken and copy it."
  read -s -r -p "Then paste it right here (it won't be echoed): " ngrok_auth_token
  echo
  ngrok config add-authtoken $ngrok_auth_token
fi

# Check for .NET installation
if ! type dotnet >/dev/null; then
  fatal "🚨.NET SDK is required. Please install the latest version and try again."
else
  echo "✅Found .NET SDK."
fi
