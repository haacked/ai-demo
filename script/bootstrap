#!/usr/bin/env bash
#/ Usage: script/bootstrap [-d|--domain <domain>] [--no-install]
#/ Description: Bootstraps the development environment
#/ Options:
#/   -d, --domain <domain>  The ngrok domain to use for your local development environment.
#/   --no-install          Do not install dependencies, just bail if they aren't present. Useful for CI environments.
source ./script/helpers/_utils.sh
set_source_and_root_dir

install=false

# Assign command line arguments to variables
while (( "$#" )); do
  key="$1"
  shift
  case "$key" in
    -d|--domain)
      ngrok_domain="${1:-}"
    ;;
    --no-install)
      install=false
    ;;
    -\?|-h|--help)
      grep '^#/' <"$0" | cut -c4-
      exit
    ;;
  esac
done

echo "Bootstrapping AIDemo..."

if $install && ! type brew >/dev/null 2>&1; then
  fatal "üö®Can't auto-install dependencies. You don't have homebrew installed. Please install it and try again."
else
  echo "‚úÖBrew installed."
fi

# JQ is used for JSON processing
install_if_missing jq "JQ is used for JSON processing"
install_if_missing docker
install_if_missing ngrok

dotnet_sdk_channel=$(cat global.json | jq -r '.sdk.channel')

echo "Checking for .NET SDK $dotnet_sdk_channel‚Ä¶"

has_dotnet=false

install_dotnet() {
  fatal "üö®.NET SDK $dotnet_sdk_channel is required. Please install it and try again."

  # TODO: Auto-install .NET
  # It's not trivial though. The path in which it's located matters, etc.
}

escaped_channel=$(echo $dotnet_sdk_channel | sed 's/\./\\./g')
sdk_regex="^$escaped_channel\.[0-9]+$"

# Just in case the user hasn't installed .NET
if ! type dotnet >/dev/null; then
  install_dotnet
else
  matching_version=$(dotnet --list-sdks | cut -d ' ' -f 1 | grep -E $sdk_regex)
  if [ -z "$matching_version" ]; then
    install_dotnet
  else
    echo "‚úÖFound suitable .NET SDK version $matching_version."
  fi
fi

# Now set up configuration

if [ -f "$HOME/Library/Application Support/ngrok/ngrok.yml" ]; then
  echo "‚úÖFound existing ngrok configuration. Skipping‚Ä¶"
else
  echo "‚ö†Ô∏èI need your ngrok auth token."
  echo "Go to https://dashboard.ngrok.com/get-started/your-authtoken and copy it."
  read -s -r -p "Then paste it right here (it won't be echoed): " ngrok_auth_token
  echo
  ngrok config add-authtoken $ngrok_auth_token
fi

echo "About to install the .NET tools and workloads. This may take a while."

echo "dotnet tool restore"
sudo dotnet tool restore
echo "dotnet workload update"
sudo dotnet workload update
echo "dotnet workload install aspire"
sudo dotnet workload install aspire
