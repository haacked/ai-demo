@page "/"
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<section class="m-4 p-4 rounded-xl bg-white border border-gray-300">
    <AuthorizeView>
        <Authorized>
            <h1 class="text-lg font-semibold leading-tight">Welcome</h1>
            <p class="mt-2">
                This is a demonstration of a 1-1 chat bot implemented with the Open AI Chat GPT API.
            </p>
            <p class="text-gray-400 text-sm">
                <a asp-page="/Assistants/Index">Click here</a> for a demonstration of the Assistants API.
            </p>

            <div class="mt-2">
                <Bot Username="@Name"
                     AvatarUrl="@AvatarUrl"
                     UserIdentifier="@UserIdentifier"/>
            </div>
        </Authorized>
        <NotAuthorized>
            <h1 class="text-lg font-semibold leading-tight">Welcome</h1>
            <p class="mt-2">This site demonstrates using Open AI in multiple ways.</p>
            But first, you need to <a href="/login">login</a>.
        </NotAuthorized>
    </AuthorizeView>
</section>

@code {
    string? Name { get; set; }
    string? UserIdentifier { get; set; }
    Uri? AvatarUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        Name = user.Identity?.Name ?? "unknown";
        UserIdentifier = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
        AvatarUrl = new Uri(user.Claims.FirstOrDefault(c => c.Type == "image")?.Value ?? "https://github.com/ghost.png");
    }
}