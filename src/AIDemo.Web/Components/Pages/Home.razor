@page "/"
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>
    <Authorized>
        <Bot Username="@Name"
             AvatarUrl="@AvatarUrl"
             UserIdentifier="@UserIdentifier"/>
    </Authorized>
    <NotAuthorized>
        <h1 class="text-lg font-semibold leading-tight">Welcome</h1>
        <p class="mt-2">This site demonstrates using Open AI in multiple ways.</p>
        But first, you need to <a href="/login">login</a>.
    </NotAuthorized>
</AuthorizeView>

@code {
    string? Name { get; set; }
    string? UserIdentifier { get; set; }
    Uri? AvatarUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        Name = user.Identity?.Name ?? "unknown";
        UserIdentifier = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
        AvatarUrl = new Uri(user.Claims.FirstOrDefault(c => c.Type == "image")?.Value ?? "https://github.com/ghost.png");
    }
}