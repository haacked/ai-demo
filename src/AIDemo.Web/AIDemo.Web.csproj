<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <RootNamespace>Haack.AIDemoWeb</RootNamespace>
    <RazorLangVersion>latest</RazorLangVersion>
    <IsPackable>false</IsPackable>
    <ImplicitUsings>enable</ImplicitUsings>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <TypeScriptCompileOnSaveEnabled>False</TypeScriptCompileOnSaveEnabled>
    <UserSecretsId>679f516b-fc62-4c81-be3e-2cb639960e16</UserSecretsId>
    <TargetFramework>net8.0</TargetFramework>
    <UseRidGraph>true</UseRidGraph>
    <PackageId>AIDemo.Web</PackageId>
  </PropertyGroup>

  <Target Name="RunWebpack" AfterTargets="AfterBuild">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Condition="$(Configuration) == 'Debug'" Command="npm run-script debug" />
  </Target>

  <Target Name="PublishForRelease" AfterTargets="ComputeFilesToPublish">
    <Exec Condition="$(Configuration) == 'Release'" Command="npm install" />
    <Exec Condition="$(Configuration) == 'Release'" Command="npm run-script release" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <ItemGroup>
    <PackageReference Include="Aspire.Npgsql.EntityFrameworkCore.PostgreSQL" />
    <PackageReference Include="AspNet.Security.OAuth.GitHub" />
    <PackageReference Include="Azure.AI.OpenAI" />
    <PackageReference Include="Google.Apis.PeopleService.v1" />
    <PackageReference Include="MassTransit" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Google" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR.Client" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" />
    <PackageReference Include="Microsoft.SemanticKernel" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL.NetTopologySuite" />
    <PackageReference Include="OctoKit" />
    <PackageReference Include="Pgvector.EntityFrameworkCore" />
    <PackageReference Include="refit" />
    <PackageReference Include="Refit.HttpClientFactory" />
    <PackageReference Include="System.Text.Json" />
    <PackageReference Include="TagHelperPack" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="**\package.json" CopyToPublishDirectory="Never" CopyToOutputDirectory="Never" />
    <Content Update="**\package-lock.json" CopyToPublishDirectory="Never" CopyToOutputDirectory="Never" />
    <Content Update="**\packages.lock.json" CopyToPublishDirectory="Never" CopyToOutputDirectory="Never" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\AIDemo.ServiceDefaults\AIDemo.ServiceDefaults.csproj" />
  </ItemGroup>
</Project>
