@page
@model Haack.AIDemoWeb.Pages.Demos.ContactsPageModel

@{
    ViewData["Title"] = "Contacts";
}

<section class="m-4 p-4 rounded-xl bg-white border border-gray-300">
    <h1 class="text-lg font-semibold leading-tight">Contacts</h1>

    <label class="text-sm text-gray-500 dark:text-gray-400">Imported Contacts</label>
    <span class="text-sm text-gray-500 dark:text-gray-400">@Model.TotalImportedContacts</span>

    <label class="text-sm text-gray-500 dark:text-gray-400">Contacts with facts</label>
    <span class="text-sm text-gray-500 dark:text-gray-400">@Model.TotalImportedContactsWithFacts</span>

    <label class="text-sm text-gray-500 dark:text-gray-400">Imported Contacts With Addresses</label>
    <span class="text-sm text-gray-500 dark:text-gray-400">@Model.TotalImportedContactsWithAddresses</span>

    <label class="text-sm text-gray-500 dark:text-gray-400">Imported Contacts With Locations</label>
    <span class="text-sm text-gray-500 dark:text-gray-400">@Model.TotalImportedContactsWithAddressLocations</span>

    <h2 class="text-lg font-semibold">Imported Contacts</h2>

    <form method="get">
        <label asp-for="Filter"></label>
        <input asp-for="Filter" />
    </form>

    <table class="border-collapse table-auto w-full text-sm">
        <thead>
            <tr>
                <th class="border-b dark:border-slate-600 font-medium p-4 pl-8 pt-0 pb-3 text-slate-400 dark:text-slate-200 text-left">
                    Name
                </th>
                <th class="border-b dark:border-slate-600 font-medium p-4 pl-8 pt-0 pb-3 text-slate-400 dark:text-slate-200 text-left">
                    Birthday
                </th>
                <th class="border-b dark:border-slate-600 font-medium p-4 pt-0 pb-3 text-slate-400 dark:text-slate-200 text-left">
                    Address
                </th>
                <th class="border-b dark:border-slate-600 font-medium p-4 pt-0 pb-3 text-slate-400 dark:text-slate-200 text-left">
                    Facts
                </th>
                <th class="border-b dark:border-slate-600 font-medium p-4 pt-0 pb-3 text-slate-400 dark:text-slate-200 text-left">
                    Actions
            </tr>
        </thead>
        <tbody class="bg-white dark:bg-slate-800">
        @foreach (var contact in Model.Contacts) {
            <tr>
                <td class="border-b border-slate-100 dark:border-slate-700 p-4 pl-8 text-slate-500 dark:text-slate-400">
                    @foreach (var name in contact.Names) {
                        @name.UnstructuredName
                    }
                </td>
                <td class="border-b border-slate-100 dark:border-slate-700 p-4 pl-8 text-slate-500 dark:text-slate-400">
                   @if (contact.Birthday is { } birthday) {
                        <span>@birthday</span>
                    }
                </td>
                <td class="border-b border-slate-100 dark:border-slate-700 p-4 pl-8 text-slate-500 dark:text-slate-400">
                    <div class="flex">
                        @foreach (var address in contact.Addresses) {
                            <div class="max-w-sm rounded overflow-hidden shadow-lg">
                                <div class="px-6 py-4">
                                    <span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">@address.Type</span>
                                    <p class="text-gray-700 text-sm">
                                        @address.FormattedValue
                                    </p>
                                    <p>
                                        @if (address.Location is { } location) {
                                            <span class="text-xs italic">@location.Y, @location.X</span>
                                        }
                                    </p>
                                </div>
                            </div>
                        }
                    </div>
                </td>
                <td class="border-b border-slate-100 dark:border-slate-700 p-4 pl-8 text-slate-500 dark:text-slate-400">
                    <div class="flex">
                        @foreach (var fact in contact.Facts) {
                            <div class="max-w-sm rounded overflow-hidden shadow-lg">
                                <div class="px-6 py-4">
                                    <p class="text-gray-700 text-sm">
                                        @fact.Content
                                    </p>
                                </div>
                            </div>
                        }
                    </div>
                </td>
                <td class="border-b border-slate-100 dark:border-slate-700 p-4 pl-8 text-slate-500 dark:text-slate-400">
                    <div class="flex">
                        <form method="post">
                            <input type="hidden" name="id" value="@contact.Id"/>
                            <button>‚ùå</button>
                        </form>
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>

    <h2 class="text-lg font-semibold">API Contacts</h2>

    @if (Model.ApiContacts.Any()) {
        <p class="text-sm text-gray-500 dark:text-gray-400">Showing @Model.ApiContacts.Count API contacts</p>
        <details>
            @foreach (var contact in Model.ApiContacts) {
            <div class="p-2">
                <h2>
                    @if (contact.Photos is not null) {
                        foreach (var photo in contact.Photos) {
                            <img src="@photo.Url" alt="Contact photo" class="w-12 h-12 rounded-full" />
                        }
                    }

                    @if (contact.Names is not null) {
                        foreach (var name in contact.Names) {
                            <span class="text-lg font-semibold">@name.DisplayName</span>
                        }
                    }
                    else
                    {
                        <span>Contact has no name</span>
                    }

                    @if (contact.Nicknames is not null) {
                        <span> AKA </span>
                        foreach (var name in contact.Nicknames) {
                            <span class="text-lg font-semibold">(@name.Value)</span>
                        }
                    }

                </h2>
                <div>
                    @if (contact is { Addresses: { } addresses }) {
                    foreach (var address in addresses) {
                    <div>
                        <strong class="text-xs text-gray-300 dark:text-gray-100">@address.Type</strong>
                        <span class="text-xs text-gray-500 dark:text-gray-400">@address.FormattedValue</span>
                    </div>
                    }
                    }
                </div>
            </div>
            }
        </details>

        if (Model.NextPageToken is not null) {
            <form method="post">
                <input type="hidden" name="next" value="@Model.NextPageToken" />
                <button type="submit" class="btn btn-primary">Next Page</button>
            </form>
        }
    } else {
        <div class="m-4 p-4">
            No API contacts.
        </div>
    }

    <form method="post">
        <button type="submit" class="btn btn-primary">Request Contacts</button>
        <button asp-page-handler="import" type="submit" class="btn btn-primary">Import</button>
        <button asp-page-handler="truncate" type="submit" class="btn btn-danger">Truncate</button>
    </form>
</section>